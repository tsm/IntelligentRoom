package intelligentroomclient;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;

/**
 * Intelligent room: bright control by Aruino
 * 
 * @author tsm & Smilasek
 * tomszom.com
 */
public class Console extends javax.swing.JFrame {

    /**
     * Creates new form Console
     */
    public Console(int x) {
        this.setLocation(x,0);
        initComponents();
        this.setTitle("Measurements report");
        this.setDefaultCloseOperation(HIDE_ON_CLOSE);
    }
    
    /**
     * Append message to console window
     * @param msg 
     */
    public void writeMsg(String msg){
        textArea.append(msg+"\n");
        textArea.selectAll();
	int i = textArea.getSelectionEnd();
	textArea.select(i, i);
    }

    /**
     * Clean text in console window
     */
    public void clearConsole(){
        textArea.setText("");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        saveToFileButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage(IntelligentRoomClient.class.getResource("../img/icon.png")));

        textArea.setEditable(false);
        textArea.setColumns(20);
        textArea.setForeground(new java.awt.Color(0, 0, 204));
        textArea.setRows(5);
        scrollPane.setViewportView(textArea);

        saveToFileButton.setText("Save results");
        saveToFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveToFileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(299, Short.MAX_VALUE)
                .addComponent(saveToFileButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveToFileButton)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveToFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveToFileButtonActionPerformed
        int returnVal = fileChooser.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            if (file!=null){
                String nameOfFile = file.getPath();
                //check if the file exists  
//                boolean exists = (new File(nameOfFile)).exists();
//                if (exists){
                    try {  
                    BufferedWriter out = new BufferedWriter(new FileWriter(nameOfFile));  
                    out.write(textArea.getText());  
                    out.close();  
                    } catch (IOException ex1) {
                        System.out.println("Error while writing to file");
                    }
                }
            }
    }//GEN-LAST:event_saveToFileButtonActionPerformed

    private final JFileChooser fileChooser = new JFileChooser();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton saveToFileButton;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
